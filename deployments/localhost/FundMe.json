{
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "s_priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWithdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "funder",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "s_funders",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "transactionHash": "0x98f1e6a799e5b300096bb72bffd88170648270a678b72e40bfac17bd11e35db7",
    "receipt": {
        "to": null,
        "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
        "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "transactionIndex": 0,
        "gasUsed": "1065907",
        "logsBloom": "0x
        "blockHash": "0x488036584d072ee822d38adabcb0e8581fed7b5360fbcde229dfb659f1b8e43c",
        "transactionHash": "0x98f1e6a799e5b300096bb72bffd88170648270a678b72e40bfac17bd11e35db7",
        "logs": [],
        "blockNumber": 2,
        "cumulativeGasUsed": "1065907",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x5FbDB2315678afecb367f032d93F642f64180aa3"],
    "numDeployments": 1,
    "solcInputHash": "c367219e80e9eba0f5105c1776be6b3d",
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Judeitopa\",\"details\":\"This implements price feed as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"title\":\"A contract for crowdfunding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"},\"getOwner()\":{\"notice\":\": all the functions below are view functions to ensure gas efficiency : all functions below ensures readability in interacting with the contract \"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/** \\n * @title A contract for crowdfunding\\n * @author Judeitopa\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements price feed as our library\\n*/\\ncontract FundMe {\\n\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] public s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private  immutable  i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    \\n    AggregatorV3Interface private s_priceFeed;\\n        modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address s_priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n    }\\n\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    \\n    receive() external payable {\\n        fund();\\n    }\\n    fallback() external payable {\\n        fund();\\n    }\\n    \\n    /**\\n     * @notice This function funds this contract\\n     * @dev This implements price feeds as our library\\n     */\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    \\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    \\n    //withdraw function thats much gas efficient\\n    function cheaperWithdraw() public payable onlyOwner{\\n        address[] memory funders = s_funders;\\n\\n        for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n          require(success);\\n    }\\n   \\n  /**\\n   * : all the functions below are view functions to ensure gas efficiency\\n   * : all functions below ensures readability in interacting with the contract\\n   * \\n   */\\n    function getOwner() public view returns(address) {\\n      return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns(address){\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder) public view returns(uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns(AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x87659a0dfeadba99ad31b82cd18002be56ad48eabba0651db7e0c6a8edbaa6a9\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        \\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0xa3573014c1b641161a47590a689cd5e9738c18bbed9c2bca37aa84eedac59231\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b506040516200137038038062001370833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6111ea620001866000396000818161038a0152818161061801528181610668015261085e01526111ea6000f3fe60806040526004361061008a5760003560e01c8063893d20e811610059578063893d20e81461015f5780639e87a5cd1461018a578063b60d4288146101b5578063be2693f0146101bf578063d7b4750c146101c957610099565b80630343fb25146100a35780633ccfd60b146100e057806354861af7146100f75780636b69a5921461013457610099565b3661009957610097610206565b005b6100a1610206565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610b22565b610340565b6040516100d79190610b68565b60405180910390f35b3480156100ec57600080fd5b506100f5610388565b005b34801561010357600080fd5b5061011e60048036038101906101199190610baf565b6105c8565b60405161012b9190610beb565b60405180910390f35b34801561014057600080fd5b50610149610607565b6040516101569190610b68565b60405180910390f35b34801561016b57600080fd5b50610174610614565b6040516101819190610beb565b60405180910390f35b34801561019657600080fd5b5061019f61063c565b6040516101ac9190610c65565b60405180910390f35b6101bd610206565b005b6101c7610666565b005b3480156101d557600080fd5b506101f060048036038101906101eb9190610baf565b6108f4565b6040516101fd9190610beb565b60405180910390f35b6802b5e3af16b1880000610245600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461093c90919063ffffffff16565b1015610286576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027d90610cdd565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d49190610d2c565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104b85760006001828154811061043357610432610d82565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104b090610db1565b915050610410565b50600067ffffffffffffffff8111156104d4576104d3610dfa565b5b6040519080825280602002602001820160405280156105025781602001602082028036833780820191505090505b5060019080519060200190610518929190610a18565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053f90610e5a565b60006040518083038185875af1925050503d806000811461057c576040519150601f19603f3d011682016040523d82523d6000602084013e610581565b606091505b50509050806105c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bc90610ebb565b60405180910390fd5b50565b600181815481106105d857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106eb576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561076f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610725575b5050505050905060005b81518110156107f957600082828151811061079757610796610d82565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107f190610db1565b915050610779565b50600067ffffffffffffffff81111561081557610814610dfa565b5b6040519080825280602002602001820160405280156108435781602001602082028036833780820191505090505b5060019080519060200190610859929190610a18565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108a090610e5a565b60006040518083038185875af1925050503d80600081146108dd576040519150601f19603f3d011682016040523d82523d6000602084013e6108e2565b606091505b50509050806108f057600080fd5b5050565b60006001828154811061090a57610909610d82565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061094883610978565b90506000670de0b6b3a764000085836109619190610edb565b61096b9190610f64565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109c157600080fd5b505afa1580156109d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f99190611022565b5050509150506402540be40081610a10919061109d565b915050919050565b828054828255906000526020600020908101928215610a91579160200282015b82811115610a905782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a38565b5b509050610a9e9190610aa2565b5090565b5b80821115610abb576000816000905550600101610aa3565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aef82610ac4565b9050919050565b610aff81610ae4565b8114610b0a57600080fd5b50565b600081359050610b1c81610af6565b92915050565b600060208284031215610b3857610b37610abf565b5b6000610b4684828501610b0d565b91505092915050565b6000819050919050565b610b6281610b4f565b82525050565b6000602082019050610b7d6000830184610b59565b92915050565b610b8c81610b4f565b8114610b9757600080fd5b50565b600081359050610ba981610b83565b92915050565b600060208284031215610bc557610bc4610abf565b5b6000610bd384828501610b9a565b91505092915050565b610be581610ae4565b82525050565b6000602082019050610c006000830184610bdc565b92915050565b6000819050919050565b6000610c2b610c26610c2184610ac4565b610c06565b610ac4565b9050919050565b6000610c3d82610c10565b9050919050565b6000610c4f82610c32565b9050919050565b610c5f81610c44565b82525050565b6000602082019050610c7a6000830184610c56565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610cc7601b83610c80565b9150610cd282610c91565b602082019050919050565b60006020820190508181036000830152610cf681610cba565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d3782610b4f565b9150610d4283610b4f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d7757610d76610cfd565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610dbc82610b4f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610def57610dee610cfd565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e44600083610e29565b9150610e4f82610e34565b600082019050919050565b6000610e6582610e37565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ea5600b83610c80565b9150610eb082610e6f565b602082019050919050565b60006020820190508181036000830152610ed481610e98565b9050919050565b6000610ee682610b4f565b9150610ef183610b4f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f2a57610f29610cfd565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f6f82610b4f565b9150610f7a83610b4f565b925082610f8a57610f89610f35565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fb481610f95565b8114610fbf57600080fd5b50565b600081519050610fd181610fab565b92915050565b6000819050919050565b610fea81610fd7565b8114610ff557600080fd5b50565b60008151905061100781610fe1565b92915050565b60008151905061101c81610b83565b92915050565b600080600080600060a0868803121561103e5761103d610abf565b5b600061104c88828901610fc2565b955050602061105d88828901610ff8565b945050604061106e8882890161100d565b935050606061107f8882890161100d565b925050608061109088828901610fc2565b9150509295509295909350565b60006110a882610fd7565b91506110b383610fd7565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110f2576110f1610cfd565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561112f5761112e610cfd565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561116c5761116b610cfd565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111a9576111a8610cfd565b5b82820290509291505056fea26469706673582212203b97daa1d20c2d903aaafda0af0d51e630bc62182c236358d5b2813f48f0790464736f6c63430008080033",
    "deployedBytecode": "0x60806040526004361061008a5760003560e01c8063893d20e811610059578063893d20e81461015f5780639e87a5cd1461018a578063b60d4288146101b5578063be2693f0146101bf578063d7b4750c146101c957610099565b80630343fb25146100a35780633ccfd60b146100e057806354861af7146100f75780636b69a5921461013457610099565b3661009957610097610206565b005b6100a1610206565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610b22565b610340565b6040516100d79190610b68565b60405180910390f35b3480156100ec57600080fd5b506100f5610388565b005b34801561010357600080fd5b5061011e60048036038101906101199190610baf565b6105c8565b60405161012b9190610beb565b60405180910390f35b34801561014057600080fd5b50610149610607565b6040516101569190610b68565b60405180910390f35b34801561016b57600080fd5b50610174610614565b6040516101819190610beb565b60405180910390f35b34801561019657600080fd5b5061019f61063c565b6040516101ac9190610c65565b60405180910390f35b6101bd610206565b005b6101c7610666565b005b3480156101d557600080fd5b506101f060048036038101906101eb9190610baf565b6108f4565b6040516101fd9190610beb565b60405180910390f35b6802b5e3af16b1880000610245600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461093c90919063ffffffff16565b1015610286576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027d90610cdd565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d49190610d2c565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104b85760006001828154811061043357610432610d82565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104b090610db1565b915050610410565b50600067ffffffffffffffff8111156104d4576104d3610dfa565b5b6040519080825280602002602001820160405280156105025781602001602082028036833780820191505090505b5060019080519060200190610518929190610a18565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053f90610e5a565b60006040518083038185875af1925050503d806000811461057c576040519150601f19603f3d011682016040523d82523d6000602084013e610581565b606091505b50509050806105c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bc90610ebb565b60405180910390fd5b50565b600181815481106105d857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106eb576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561076f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610725575b5050505050905060005b81518110156107f957600082828151811061079757610796610d82565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107f190610db1565b915050610779565b50600067ffffffffffffffff81111561081557610814610dfa565b5b6040519080825280602002602001820160405280156108435781602001602082028036833780820191505090505b5060019080519060200190610859929190610a18565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108a090610e5a565b60006040518083038185875af1925050503d80600081146108dd576040519150601f19603f3d011682016040523d82523d6000602084013e6108e2565b606091505b50509050806108f057600080fd5b5050565b60006001828154811061090a57610909610d82565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061094883610978565b90506000670de0b6b3a764000085836109619190610edb565b61096b9190610f64565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109c157600080fd5b505afa1580156109d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f99190611022565b5050509150506402540be40081610a10919061109d565b915050919050565b828054828255906000526020600020908101928215610a91579160200282015b82811115610a905782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a38565b5b509050610a9e9190610aa2565b5090565b5b80821115610abb576000816000905550600101610aa3565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aef82610ac4565b9050919050565b610aff81610ae4565b8114610b0a57600080fd5b50565b600081359050610b1c81610af6565b92915050565b600060208284031215610b3857610b37610abf565b5b6000610b4684828501610b0d565b91505092915050565b6000819050919050565b610b6281610b4f565b82525050565b6000602082019050610b7d6000830184610b59565b92915050565b610b8c81610b4f565b8114610b9757600080fd5b50565b600081359050610ba981610b83565b92915050565b600060208284031215610bc557610bc4610abf565b5b6000610bd384828501610b9a565b91505092915050565b610be581610ae4565b82525050565b6000602082019050610c006000830184610bdc565b92915050565b6000819050919050565b6000610c2b610c26610c2184610ac4565b610c06565b610ac4565b9050919050565b6000610c3d82610c10565b9050919050565b6000610c4f82610c32565b9050919050565b610c5f81610c44565b82525050565b6000602082019050610c7a6000830184610c56565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610cc7601b83610c80565b9150610cd282610c91565b602082019050919050565b60006020820190508181036000830152610cf681610cba565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d3782610b4f565b9150610d4283610b4f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d7757610d76610cfd565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610dbc82610b4f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610def57610dee610cfd565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e44600083610e29565b9150610e4f82610e34565b600082019050919050565b6000610e6582610e37565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ea5600b83610c80565b9150610eb082610e6f565b602082019050919050565b60006020820190508181036000830152610ed481610e98565b9050919050565b6000610ee682610b4f565b9150610ef183610b4f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f2a57610f29610cfd565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f6f82610b4f565b9150610f7a83610b4f565b925082610f8a57610f89610f35565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fb481610f95565b8114610fbf57600080fd5b50565b600081519050610fd181610fab565b92915050565b6000819050919050565b610fea81610fd7565b8114610ff557600080fd5b50565b60008151905061100781610fe1565b92915050565b60008151905061101c81610b83565b92915050565b600080600080600060a0868803121561103e5761103d610abf565b5b600061104c88828901610fc2565b955050602061105d88828901610ff8565b945050604061106e8882890161100d565b935050606061107f8882890161100d565b925050608061109088828901610fc2565b9150509295509295909350565b60006110a882610fd7565b91506110b383610fd7565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110f2576110f1610cfd565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561112f5761112e610cfd565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561116c5761116b610cfd565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111a9576111a8610cfd565b5b82820290509291505056fea26469706673582212203b97daa1d20c2d903aaafda0af0d51e630bc62182c236358d5b2813f48f0790464736f6c63430008080033",
    "devdoc": {
        "author": "Judeitopa",
        "details": "This implements price feed as our library",
        "kind": "dev",
        "methods": {
            "fund()": {
                "details": "This implements price feeds as our library"
            }
        },
        "title": "A contract for crowdfunding",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "fund()": {
                "notice": "This function funds this contract"
            },
            "getOwner()": {
                "notice": ": all the functions below are view functions to ensure gas efficiency : all functions below ensures readability in interacting with the contract "
            }
        },
        "notice": "This contract is to demo a sample funding contract",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 59,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 62,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "1",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 74,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
